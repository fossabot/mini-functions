name: ❯ release

on: [push, pull_request]

jobs:
  mini_functions_release:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - x86_64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Cache cargo registry 🧑‍💼
        id: cache-cargo-registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build 🚀
        id: cache-cargo-build
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Toolchain 🛠
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # - name: Install target 🛠
      #   run: |
      #     rustup target add x86_64-unknown-linux-gnu
      #     rustup target add x86_64-pc-windows-gnu
      #     rustup target add x86_64-apple-darwin

      - name: Build libraries 🏗
        run: |
          cargo install cross
          cargo clean
          cargo test --all --release --target=${{ matrix.target }} --lib
          cross build --release --target=${{ matrix.target }} --lib

      - name: Cache build artifacts 🧑‍💼
        id: cache-build-artifacts
        uses: actions/cache@v2
        with:
          path: target/${{ matrix.target }}/release
          key: ${{ runner.os }}-cargo-build-target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Package 📦
        id: package
        run: |
          version=$(grep version Cargo.toml | sed -n 2p | cut -d '"' -f 2)
          echo "version=$version"
          mkdir -p packages
          mv target/${{ matrix.target }}/release/libmini_functions.rlib packages/libmini_functions-${version}.rlib
          tar -czvf packages/mini_functions-${version}.tar.gz packages/libmini_functions-${version}.rlib

      - name: Checkout 🛒
        id: checkout
        uses: actions/checkout@v3

      - name: Generate Changelog 📜
        id: changelog
        run: |
          # Generate a changelog based on the commit history
          git log --oneline --decorate --color > changelog.txt

          # Add a header to the changelog
          echo "# Changelog" > ${{ github.workspace }}-CHANGELOG.txt
          echo >> ${{ github.workspace }}-CHANGELOG.txt

          # Remove ANSI escape codes from the changelog
          sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g" changelog.txt > changelog-clean.txt

          # Remove the first line of the changelog
          sed -i '1d' changelog-clean.txt

          # Append the commit history to the changelog
          cat changelog-clean.txt >> ${{ github.workspace }}-CHANGELOG.txt
          echo ${{ github.workspace }}-CHANGELOG.txt

      - name: Extract version number 📜
        id: version
        run: |
          version=$(grep version Cargo.toml | cut -d '"' -f 2)
          echo "version=v$version" >> $GITHUB_ENV

      - name: Create Release 🚀
        # if: github.event_name != 'pull_request'
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          files: |
            README.md
            LICENSE-MIT
            LICENSE-Apache
            packages/libmini_functions-${{ env.version }}.tar.gz
          name: Mini Functions 🦀 v${{ steps.version.outputs.version }}
          # release_name: ${{ github.workspace }}
          # -${{ steps.version.outputs.version }}
          tag_name: v${{ steps.version.outputs.version }}
          draft: true
          prerelease: false
