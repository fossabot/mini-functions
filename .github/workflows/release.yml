name: ‚ùØ release

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macOS-latest
            target: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - run: rustup update stable
      - run: rustup target add ${{ matrix.target }}
      - run: cargo build --all-features --release --target ${{ matrix.target }}
      - run: cargo test --all-features --release --target ${{ matrix.target }}
      - name: Package
        if: matrix.os != 'windows-latest'
        run: |
          strip target/${{ matrix.target }}/release/${{ env.BIN_NAME }}
          cd target/${{ matrix.target }}/release
          tar czvf ../../../${{ env.PACKAGE_NAME }}-${{ matrix.target }}.tar.gz ${{ env.BIN_NAME }}
          cd -
      - name: Package (windows)
        if: matrix.os == 'windows-latest'
        run: |
          strip target/${{ matrix.target }}/release/${{ env.BIN_NAME }}.exe
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ env.PACKAGE_NAME }}-${{ matrix.target }}.zip ${{ env.BIN_NAME }}.exe
          cd -
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: "${{ env.PACKAGE_NAME }}-${{ matrix.target }}*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish:
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/release
          key: "${{ env.PACKAGE_NAME }}-${{ matrix.target }}*"
      - run: cargo publish --token ${{ secrets.CARGO_API_TOKEN }} --allow-dirty
