name: ❯ release

on: [push, pull_request]

jobs:
  mini_functions:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - x86_64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Cache cargo registry 🧑‍💼
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build 🚀
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Toolchain 🛠
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Extract version number 📜
        run: |
          version=$(grep version Cargo.toml | cut -d '"' -f 2)
          echo "version=$version"

      - name: Build libraries 🏗
        run: |
          cargo install cross
          cargo clean
          cross build --release --target=${{ matrix.target }} --lib

      - name: Test 🧪
        run: |
          cargo test --all

      - name: Package 📦
        run: |
          mkdir -p packages
          mv target/${{ matrix.target }}/release/libmini_functions.rlib packages/libmini_functions-$version-${{ github.sha }}.rlib
          tar -czvf packages/mini_functions-$version-${{ github.sha }}.tar.gz packages/libmini_functions-$version-${{ github.sha }}.rlib

  publish:
    needs: mini_functions
    if: startsWith(github.ref, 'refs/tags/')
    name: Release Library
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛒
        uses: actions/checkout@v3
      - name: Generate Changelog 📜
        run: |
          # Generate a changelog based on the commit history
          git log --oneline --decorate --color > changelog.txt
          # Add a header to the changelog
          echo "# Changelog" > ${{ github.workspace }}-CHANGELOG.txt
          echo >> ${{ github.workspace }}-CHANGELOG.txt
          # Append the commit history to the changelog
          cat changelog.txt >> ${{ github.workspace }}-CHANGELOG.txt
          echo changelog.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          files: |
            packages/mini_functions-$version-${{ github.sha }}.tar.gz
          name: ${{ github.workspace }}
          tag_name: ${{ github.workspace }}
          draft: false
          prerelease: false
