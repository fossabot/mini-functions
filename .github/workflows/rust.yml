name: ❯ rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  rust:
    strategy:
      fail-fast: false
      matrix:
        node-version: [16]
        include:
          # @see https://doc.rust-lang.org/nightly/rustc/platform-support.html
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu # 64-bit Linux (kernel 2.6.32+, glibc 2.11+)
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu # ARM64 Linux (kernel 4.1, glibc 2.17+)
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu # 64-bit Windows (7 or later)
          - os: windows-latest
            target: x86_64-pc-windows-msvc # 64-bit Windows (7 or later)
          - os: macOS-latest
            target: x86_64-apple-darwin # 64-bit macOS (10.7 Lion or later)
          - os: macOS-latest
            target: aarch64-apple-darwin # ARM64 macOS (10.15 Catalina or later)

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository 🛎️
        id: checkout
        uses: actions/checkout@v3

      - name: Install Rust
        id: rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Install rustfmt 🦀
        id: install-rustfmt
        uses: actions-rs/toolchain@v1
        with:
          node-version: 16
          components: rustfmt
          override: true
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: stable

      - name: Run rustfmt 🦀
        id: rustfmt
        run: rustup component add rustfmt

      - name: Check formatting 🦀
        id: fmt
        uses: actions-rs/cargo@v1
        with:
          node-version: 16
          command: fmt
          args: --all -- --check --verbose --color=always

      - name: Build libraries 🏗
        id: build
        run: |

          # Check the code base
          cargo check --all

          # Install cross
          cargo install cross

          # Clean the build artifacts
          cargo clean

          # Build the libraries for the target platform and architecture
          cross build --release --target=${{ matrix.target }} --lib

      - name: Upload artifacts 📦
        id: upload
        uses: actions/upload-artifact@v3
        with:
          name: mini-functions-${{ matrix.target }}
          path: target/release
