[package]
authors = ["Sebastien Rousseau"]
categories = ["development-tools"]
description = "Highly Performant Utility And Wrapper Functions Library For Rust"
documentation = "https://docs.rs/mini-functions"
edition = "2021"
homepage = "https://minifunctions.com"
include = [
    "/build.rs",
    "/Cargo.toml",
    "/LICENSE-APACHE",
    "/LICENSE-MIT",
    "/README.md",
    "/src/**",
    "/tests/**",
]
keywords = ["functions"]
license = "Apache-2.0 OR MIT"
name = "mini-functions"
readme = "README.md"
repository = "https://github.com/sebastienrousseau/mini-functions.git"
resolver = "2" # Enables the new Cargo resolution engine
rust-version = "1.57.0"
version = "0.0.8"

[badges]
maintenance = { status = "actively-developed" }

[dependencies]
base64 = "0.20.0"
blake3 = "1.3.3"
convert_case = "0.6.0"
image = "0.24.5"
jwt = "0.16.0"
jsonwebtoken = "8.2.0"
openssl = "0.10.37"
serde_derive = "1.0.152"
rand = "0.8.5"
sha2 = "0.10.6"
hmac = "0.12.1"
serde = "1.0.152"
serde_json = "1.0.91"
qrcode = "0.12.0"
time = "0.3.17"
uuid = { version = "1.2.2", features = ["v3", "v4", "v5"] }

[package.metadata.docs.rs]
all-features = true
default-target = "x86_64-unknown-linux-gnu"
rustdoc-args = ["--cfg", "docsrs"]
targets = [
    "x86_64-unknown-linux-gnu",
    "aarch64-unknown-linux-gnu",
    "x86_64-pc-windows-gnu",
    "x86_64-pc-windows-msvc",
    "x86_64-apple-darwin",
    "aarch64-apple-darwin"
]

# [targets.x86_64-unknown-linux-gnu]
# image = "ubuntu:latest"

# [targets.aarch64-unknown-linux-gnu]
# image = "arm64v8/ubuntu:latest"

# [targets.x86_64-pc-windows-gnu]
# image = "mcr.microsoft.com/windows/servercore:ltsc2019"

# [targets.x86_64-pc-windows-msvc]
# image = "mcr.microsoft.com/windows/servercore:ltsc2019"

# [targets.x86_64-apple-darwin]
# image = "darwin:latest"

# [targets.aarch64-apple-darwin]
# image = "arm64v8/darwin:latest"

[profile.release]
codegen-units = 1 # Compile crates one after another so the compiler can optimize better
debug = false # Disable debug information
incremental = false # Disable incremental compilation
lto = true # Enables link to optimizations
opt-level = "s" # Optimize for binary size
panic = "abort" # Strip expensive panic clean-up logic
rpath = false # Disable rpath
strip = "symbols"  # Automatically strip symbols from the binary.
