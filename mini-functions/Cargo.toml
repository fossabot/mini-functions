[package]
authors = ["Sebastien Rousseau"]
categories = ["development-tools"]
description = "Highly Performant Utility And Wrapper Functions Library For Rust"
documentation = "https://docs.rs/mini-functions"
edition = "2021"
homepage = "https://minifunctions.com"
include = [
    "/build.rs",
    "/Cargo.toml",
    "/LICENSE-APACHE",
    "/LICENSE-MIT",
    "/README.md",
    "/src/**",
    "/tests/**",
]
keywords = ["functions"]
license = "Apache-2.0 OR MIT"
name = "mini-functions"
readme = "README.md"
repository = "https://github.com/sebastienrousseau/mini-functions.git"
resolver = "1"
rust-version = "1.57.0"
version = "0.0.8"

[lib]
crate-type = ["lib"]
path = "src/lib.rs"

[features]
default = []

[badges]
maintenance = { status = "actively-developed" }

[dependencies]
# mini-functions-date = { path = "../mini-functions-date" }
# mini-functions-jwt = { path = "../mini-functions-jwt" }
# mini-functions-jwt-claims = { path = "../mini-functions-jwt-claims" }
# mini-functions-jwt-errors = { path = "../mini-functions-jwt-errors" }
base64 = "0.21.0"
blake3 = "1.3.3"
convert_case = "0.6.0"
image = "0.24.5"
jwt = "0.16.0"
jsonwebtoken = "8.2.0"
openssl = "0.10.45"
serde_derive = "1.0.152"
rand = "0.8.5"
sha2 = "0.10.6"
hmac = "0.12.1"
serde = "1.0.152"
serde_json = "1.0.91"
qrcode = "0.12.0"
time = "0.3.17"
uuid = { version = "1.2.2", features = ["v3", "v4", "v5"] }

[package.metadata.docs.rs]
all-features = true
default-target = "x86_64-unknown-linux-gnu"
rustdoc-args = ["--cfg", "docsrs"]
targets = [
    "x86_64-unknown-linux-gnu",
    "aarch64-unknown-linux-gnu",
    "x86_64-pc-windows-gnu",
    "x86_64-pc-windows-msvc",
    "x86_64-apple-darwin",
    "aarch64-apple-darwin"
]

# [targets.x86_64-unknown-linux-gnu]
# image = "ubuntu:latest"

# [targets.aarch64-unknown-linux-gnu]
# image = "arm64v8/ubuntu:latest"

# [targets.x86_64-pc-windows-gnu]
# image = "mcr.microsoft.com/windows/servercore:ltsc2019"

# [targets.x86_64-pc-windows-msvc]
# image = "mcr.microsoft.com/windows/servercore:ltsc2019"

# [targets.x86_64-apple-darwin]
# image = "darwin:latest"

# [targets.aarch64-apple-darwin]
# image = "arm64v8/darwin:latest"

