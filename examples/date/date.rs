/*!
Using `date` module

```no_run,shell
cargo run --example date
```
*/

extern crate mini_functions;

use mini_functions::date::date::Date;

fn main() {
    let date = Date::date();
    let day = Date::day();
    let hour = Date::hour();
    let iso_8601 = Date::iso_8601();
    let microsecond = Date::microsecond();
    let millisecond = Date::millisecond();
    let minute = Date::minute();
    let month = Date::month();
    let nanosecond = Date::nanosecond();
    let now_utc = Date::now_utc();
    let second = Date::second();
    let timestamp = Date::timestamp();
    let weekday = Date::weekday();
    let year = Date::year();

    println!("ğŸ¦€ Date::date():          âœ…  {}", date);
    println!("ğŸ¦€ Date::day():           âœ…  {}", day);
    println!("ğŸ¦€ Date::hour():          âœ…  {}", hour);
    println!("ğŸ¦€ Date::iso_8601():      âœ…  {}", iso_8601);
    println!("ğŸ¦€ Date::microsecond():   âœ…  {}", microsecond);
    println!("ğŸ¦€ Date::millisecond():   âœ…  {}", millisecond);
    println!("ğŸ¦€ Date::minute():        âœ…  {}", minute);
    println!("ğŸ¦€ Date::month():         âœ…  {}", month);
    println!("ğŸ¦€ Date::nanosecond():    âœ…  {}", nanosecond);
    println!("ğŸ¦€ Date::now_utc():       âœ…  {}", now_utc);
    println!("ğŸ¦€ Date::second():        âœ…  {}", second);
    println!("ğŸ¦€ Date::timestamp():     âœ…  {}", timestamp);
    println!("ğŸ¦€ Date::weekday():       âœ…  {}", weekday);
    println!("ğŸ¦€ Date::year():          âœ…  {}", year);
}
